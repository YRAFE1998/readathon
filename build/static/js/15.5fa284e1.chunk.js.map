{"version":3,"sources":["components/Lables/pageTitle.ts","components/Lables/subTitlePage.ts","components/Select/select.styles.tsx","components/Select/select.tsx","services/campiagn.service.ts","validations/logAchivementsFormVallidations.ts","components/Forms/logAtchivementFormInput.tsx","containers/StudentProgress/studentProgress.tsx"],"names":["PageTitle","styled","div","SubTitlePage","SelectStyleComponent","SelectInput","props","selectedRef","useRef","useState","value","setValue","useEffect","index","options","findIndex","v","label","style","color","required","error","ThemeColor","colorError","placeholder","ref","onBlur","e","target","onChange","border","name","id","className","map","dispalyName","addCampaignApi","data","axiosInstance","post","allCampaignApi","role","get","updateCampaignApi","put","Id","deleteCampaingApi","delete","getAllCampaingStudentsApi","sendClassApi","deleteCampaingStudentsApi","getStudentProgressApi","studentId","addStudentLogApi","type","addStudentLogApiFromParent","deleteStudentLogApi","logAchivementValidation","state","LogAtchivementFormInput","form","setForm","setError","console","log","inputChange","errorMessage","renderInputs","Icon","icon","inputValidation","margin","marginBottom","onClick","formValid","achievement","date","valid","description","logAchivementValiadtionForm","submit","StudentProgress","openModal","setOpenModal","params","useParams","campaign","location","useLocation","email","URLSearchParams","search","studentProgresses","setStudentProgresses","orignialStudentProgresses","setOrignialStudentProgresses","user","useContext","UserContext","openDeleteConfirmation","setOpenDeleteConfirmation","getProgress","content","then","Res","action","amount","moment","format","keyItem","readOnly","itemsExceptions","onChangePage","onSearch","selectFilter","selectFilterArray","selectFilterItemKey","selectFilterItemValue","onSelectFilter","arrayOfNames","slice","length","filter","includes","filterByTypes","removeUnAssignSelectFiler","removeSearch","open","title","onShow","bool","finally","importBtn","number","singleDelete","onClose"],"mappings":"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","file":"static/js/15.5fa284e1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PageTitle = styled.div`\r\nfont-family: SourceSansPro;\r\n\r\nfont-size: 40px;\r\n\r\nfont-weight: bold;\r\n\r\nfont-stretch: normal;\r\n\r\nfont-style: normal;\r\n\r\nline-height: 0.75;\r\n\r\nletter-spacing: normal;\r\n\r\ncolor: #000000;\r\nmargin-bottom: 17px;\r\n}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const SubTitlePage = styled.div`\r\nfont-family: SourceSansPro;\r\n\r\nfont-size: 16px;\r\n\r\nfont-weight: normal;\r\n\r\nfont-stretch: normal;\r\n\r\nfont-style: normal;\r\n\r\nline-height: 0.94;\r\n\r\nletter-spacing: normal;\r\n\r\ncolor: #666666;\r\n`;","import styled from \"styled-components\";\r\nimport { ThemeColor } from \"../../utils/colors\";\r\nexport const SelectStyleComponent = styled.div`\r\n.select-form{\r\n    margin: 10px 0 0;\r\n    padding: 20px;\r\n    border-radius: 7px;\r\n    border: solid 1px #e5e3e9;\r\n    background-color: #ffffff;\r\n    width: 100%;\r\n    font-family: SourceSansPro;\r\n    font-size: 17px;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 0.88;\r\n    letter-spacing: normal;\r\n    color: #bac2cb;\r\n    &:focus{\r\n        outline: none\r\n    }\r\n}\r\n\r\n`;\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { SelectStyleComponent } from \"./select.styles\";\r\nimport { InputPalceholderStyle, InputValidationStyle } from \"../Input/input.styles\";\r\nimport { ThemeColor } from '../../utils/colors';\r\ninterface SelectFrom {\r\n    placeholder?: string;\r\n    onBlur?: (v: any) => void;\r\n    onChange: (v: any) => void;\r\n    error?: string;\r\n    state?: string;\r\n    value?: any;\r\n    required?: boolean;\r\n    options?: any;\r\n    label?: string;\r\n    dispalyName?: string;\r\n}\r\nconst SelectInput = (props: SelectFrom) => {\r\n    const selectedRef = useRef<HTMLSelectElement>(null)\r\n    const [value, setValue] = useState(props.value || \"\");\r\n\r\n    useEffect(() => {\r\n        const index = props.options?.findIndex((v: any) => v[props?.label || ''] == value);\r\n        setValue(props.options[index]?.[props?.label || \"\"]);\r\n      \r\n    }, [props.value])\r\n    return (\r\n        <div>\r\n            <InputPalceholderStyle style={{ color: props?.required && props?.error ? `${ThemeColor.colorError}` : \"\" }}>{props.placeholder} {props?.required && \"*\"}</InputPalceholderStyle>\r\n            <SelectStyleComponent>\r\n                <select\r\n                    ref={selectedRef}\r\n                    value={value}\r\n                    onBlur={(e) => props?.onBlur && props.onBlur(e.target.value)}\r\n                    onChange={(e) => {\r\n                        setValue(e.target.value)\r\n                        props.onChange(e.target.value);\r\n                    }}\r\n                    style={{ border: props?.required && props?.error ? `1px solid ${ThemeColor.colorError}` : \"\", }}\r\n                    name=\"select\" id=\"select\" className=\"select-form\">\r\n                    <option value=\"\">{props.placeholder}</option>\r\n                    {\r\n                        props.options?.map((v: any) => <option value={v[props?.label || '']}>{v[props.dispalyName || '']}</option>)\r\n                    }\r\n\r\n                </select>\r\n            </SelectStyleComponent>\r\n            <InputValidationStyle>\r\n                {props.error}</InputValidationStyle>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","import { axiosInstance } from \"./axiosInstance\"\r\n\r\nexport const addCampaignApi = (data: any) => {\r\n    return axiosInstance.post(\"/api/add/campaign\", data);\r\n}\r\nexport const allCampaignApi = (role: string, id?: string) => {\r\n    if (role == \"teacherContent.\") {\r\n        return axiosInstance.get(\"/api/teacher/get/allMyCampaigns\")\r\n    } if (role == \"studentContent.\") {\r\n        return axiosInstance.get(`/api/student/get/campaign/${id}`)\r\n\r\n    } else {\r\n        return axiosInstance.get(\"/api/get/all/campaigns\");\r\n    }\r\n}\r\nexport const updateCampaignApi = (data: any) => {\r\n    return axiosInstance.put(`/api/update/campaign/${data.Id}`, data);\r\n}\r\nexport const deleteCampaingApi = (id: string) => {\r\n    return axiosInstance.delete(`/api/delete/campaign/${id}`);\r\n}\r\nexport const getAllCampaingStudentsApi = (id: string, role: string) => {\r\n    if (role == \"teacherContent.\") {\r\n        return axiosInstance.get(`/api/teacher/myCampaign/${id}`)\r\n    } else {\r\n        return axiosInstance.get(`/api/get/campaign/students/${id}`)\r\n    }\r\n}\r\n\r\nexport const sendClassApi = (id: string, data: any) => {\r\n    return axiosInstance.post(`/api/teacher/sendmail/campaignStudents/${id}`, data);\r\n}\r\nexport const deleteCampaingStudentsApi = (id: string, data: any) => {\r\n    return axiosInstance.put(`/api/delete/campaign/students/${id}`, data)\r\n}\r\nexport const getStudentProgressApi = (id: string, studentId: string, role: string) => {\r\n    if (role == \"teacherContent.\") {\r\n        return axiosInstance.get(`/api/teacher/get/studentAchievement/${id}/${studentId}`)\r\n    } else if (role == \"studentContent.\") {\r\n        return axiosInstance.get(`/api/student/get/studentAchievement/${studentId}/${id}`)\r\n\r\n    } else {\r\n        return axiosInstance.get(`/api/organization/get/studentAchievement/${id}/${studentId}`)\r\n    }\r\n\r\n}\r\nexport const addStudentLogApi = (id: string, studentId: string, data: any, type?: string) => {\r\n    return axiosInstance.post(`/api/teacher/addAchievement/${id}/${studentId}`, data);\r\n}\r\n\r\nexport const addStudentLogApiFromParent = (id: string, studentId: string, data: any, type?: string) => {\r\n    return axiosInstance.post(`/api/student/addAchievement/${studentId}/${id}`, data);\r\n}\r\nexport const deleteStudentLogApi = (id: string, studentId: string) => {\r\n    return axiosInstance.delete(`/api/teacher/delete/studentFromCam/${id}/${studentId}`)\r\n}\r\n","import { LogAchivementInterface } from \"../interfaces/logAchivementsInterface\";\r\nexport const logAchivementValidation = (state: (keyof LogAchivementInterface) , placeholder: string, value: string) => {\r\n\r\n    if (state == 'achievement' && !value) {\r\n        return \"Achivement Required\"\r\n    }\r\n    if (state == 'date' && !value) {\r\n        return \"Date Required\"\r\n    }\r\n    if (state == 'description' && !value) {\r\n        return \"Description Required\"\r\n    }\r\n\r\n    return \"\"\r\n}\r\n\r\nexport const logAchivementValiadtionForm = (value: LogAchivementInterface) => {\r\n    const data = {} as LogAchivementInterface\r\n    if (!value.achievement) {\r\n        data.achievement = \"Achivement Required\"\r\n    }\r\n    if (!value.date) {\r\n        data.date = \"Date Required\"\r\n    }\r\n    if (!value.type) {\r\n        data.type = \"Description Required\"\r\n\r\n    }\r\n     \r\n    const valid = data.achievement || data.date || data.description ? false : true;\r\n    \r\n    return { valid: valid, ...data };\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { ModalFooter } from '../../HOCS/modalsHocs.styles';\r\nimport { LogAchivementInterface } from '../../interfaces/logAchivementsInterface';\r\nimport { logAchivementValiadtionForm, logAchivementValidation } from '../../validations/logAchivementsFormVallidations';\r\nimport InputComponent from '../Input/input';\r\nimport { RedBackgroundButton } from '../Lables/redBackgroundButton';\r\nimport SelectInput from '../Select/select';\r\n\r\nconst LogAtchivementFormInput = (props: any) => {\r\n    const [form, setForm] = useState<LogAchivementInterface>(props.value || {})\r\n    const [error, setError] = useState<LogAchivementInterface>({});\r\n\r\n    useEffect(() => {\r\n        console.log(props.value);\r\n        if (props.value) {\r\n            setForm(props.value)\r\n        }\r\n    }, [props.value])\r\n\r\n    const inputChange = (state: any, placeholder: string, value: string) => {\r\n        const errorMessage = logAchivementValidation(state, placeholder, value);\r\n        if (errorMessage) setError({ ...error, [state]: errorMessage })\r\n        else setError({ ...error, [state]: \"\" });\r\n        setForm({ ...form, [state]: value });\r\n\r\n    }\r\n\r\n    const inputValidation = (state: any, placeholder: string, value: string) => {\r\n        const errorMessage = logAchivementValidation(state, placeholder, value);\r\n        if (errorMessage) setError({ ...error, [state]: errorMessage })\r\n        else setError({ ...error, [state]: \"\" });\r\n    }\r\n    const handleSubmit = (e: any) => {\r\n        const formValid = logAchivementValiadtionForm(form);\r\n        if (formValid.valid) {\r\n            props.submit(form)\r\n        } else {\r\n            setError({ ...error, ...formValid })\r\n        }\r\n    }\r\n    const renderInputs = (type: string, state: (keyof LogAchivementInterface), placeholder: string, name: string, Icon: any, required: boolean) => {\r\n        return <InputComponent\r\n            error={error[state]}\r\n            state={form[state]}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={form[state]}\r\n            icon={Icon}\r\n            onChange={(v) => inputChange(state, name, v)}\r\n            required={required}\r\n            onBlur={(v) => inputValidation(state, name, v)}\r\n\r\n        />\r\n    }\r\n    const renderSelect = (state: (keyof LogAchivementInterface), placeholder: string, name: string, required: boolean, label: string) => {\r\n        return <SelectInput\r\n            value={form[state]}\r\n            error={error[state]}\r\n            state={form[state]}\r\n            placeholder={placeholder}\r\n            required={required}\r\n            label={\"Id\"}\r\n            options={[{ name: \"Minutes\", Id: \"1\" }, { name: \"Donation\", Id: \"2\" }]}\r\n\r\n            dispalyName={\"name\"}\r\n            onChange={(v) => inputChange(state, name, v)}\r\n        />\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: \"0px 40px\" }}>\r\n            <div className={\"inputSpaces\"} style={{ marginBottom: \"20px\" }} >\r\n                {renderInputs(\"date\", \"date\", \"Date\", \"Date\", null, true)}\r\n            </div>\r\n            <div className={\"inputSpaces\"} style={{ marginBottom: \"20px\" }}>\r\n                {renderInputs(\"number\", \"achievement\", \"Achivement\", \"Achivement\", null, true)}\r\n            </div>\r\n           \r\n\r\n\r\n\r\n            <ModalFooter>\r\n                <RedBackgroundButton className=\"btn-save\" onClick={handleSubmit}>Add New</RedBackgroundButton>\r\n\r\n            </ModalFooter>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogAtchivementFormInput\r\n","import moment from 'moment'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useLocation, useParams } from 'react-router'\r\nimport DeleteModalContent from '../../components/Forms/deleteModalContent'\r\nimport LogAtchivementFormInput from '../../components/Forms/logAtchivementFormInput'\r\nimport { PageTitle } from '../../components/Lables/pageTitle'\r\nimport { RedOutlineButton } from '../../components/Lables/red-outlline-button'\r\nimport { RedBackgroundButton } from '../../components/Lables/redBackgroundButton'\r\nimport { SubTitlePage } from '../../components/Lables/subTitlePage'\r\nimport GenericTable from '../../components/Table/table'\r\nimport { UserContext } from '../../Context/authContext'\r\nimport ModalsHoc from '../../HOCS/modalsHoc'\r\nimport { campaignTypes } from '../../Mocks/campiagns'\r\nimport { studentProgresses } from '../../Mocks/studentProgress'\r\nimport { addStudentLogApi, getStudentProgressApi, deleteStudentLogApi, addStudentLogApiFromParent } from '../../services/campiagn.service'\r\n\r\n\r\nconst StudentProgress = () => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const params = useParams<any>();\r\n    const campaign = params?.id\r\n    const studentId = params?.studentId;\r\n    const location = useLocation();\r\n    const email = new URLSearchParams(location.search).get(\"email\");\r\n    const name = new URLSearchParams(location.search).get(\"name\");\r\n    const type = new URLSearchParams(location.search).get(\"type\");\r\n    const [studentProgresses, setStudentProgresses] = useState([]);\r\n    const [orignialStudentProgresses, setOrignialStudentProgresses] = useState([]);\r\n    const { user } = useContext<any>(UserContext);\r\n    const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\r\n    useEffect(() => {\r\n        getProgress();\r\n    }, [])\r\n    const getProgress = () => {\r\n        getStudentProgressApi(campaign, studentId, user.content).then((Res) => {\r\n            const data = Res.data.data?.map((v: any) => ({ ...v, action: v.type, amount: v.achievement, date: moment(v.date).format(\"YYYY-DD-MM\") }))\r\n            setStudentProgresses(data);\r\n            setOrignialStudentProgresses(data);\r\n        })\r\n    }\r\n    const handleSubmit = (action: string, form: any) => {\r\n        if (user.content == \"teacherContent.\") {\r\n            addStudentLogApi(campaign, studentId, form).then((Res) => getProgress()).finally(() => setOpenModal(false))\r\n        } else {\r\n            addStudentLogApiFromParent(campaign, studentId, form).then((Res) => getProgress()).finally(() => setOpenModal(false))\r\n\r\n        }\r\n    }\r\n    const filterByTypes = (value: any) => {\r\n        const arrayOfNames = value.slice().map((v: any) => v.name);\r\n        if (arrayOfNames.length) {\r\n            setStudentProgresses(orignialStudentProgresses.slice().filter((v: any) => arrayOfNames.includes(v.action)))\r\n        } else {\r\n            setStudentProgresses(orignialStudentProgresses);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <PageTitle>Student Progress</PageTitle>\r\n                    \r\n                    <SubTitlePage>{!!name && name} {!!email && `(${email})`}</SubTitlePage>\r\n                </div>\r\n                {\r\n                    !!!(user.content == 'organizationContent.') &&\r\n                    <div>\r\n\r\n                        <RedOutlineButton onClick={() => setOpenDeleteConfirmation(true)}> Remove from Campaign</RedOutlineButton>\r\n                        <RedBackgroundButton onClick={() => setOpenModal(true)}>Log Achievement</RedBackgroundButton>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n            <GenericTable\r\n                data={studentProgresses}\r\n                keyItem=\"id\"\r\n                readOnly={true}\r\n                itemsExceptions={[\"Id\", \"achievement\", \"type\", \"description\", \"createdAt\", \"updatedAt\", \"teacher_id\", \"student_id\", \"campaign_id\", \"studentAch\", \"supporter_id\"]}\r\n                onChangePage={() => console.log(\"page\")}\r\n                onSearch={() => console.log(\"search\")}\r\n                selectFilter={true}\r\n                selectFilterArray={[{ name: \"Minutes\", Id: \"1\" }, { name: \"Donation\", Id: \"2\" }]}\r\n                selectFilterItemKey={\"Id\"}\r\n                selectFilterItemValue={\"name\"}\r\n                onSelectFilter={(v) => filterByTypes(v)}\r\n                removeUnAssignSelectFiler={true}\r\n                removeSearch={true}\r\n\r\n\r\n            ></GenericTable>\r\n\r\n\r\n            <div >\r\n                <ModalsHoc open={openModal} title=\"Log Achievement\" onShow={(bool: boolean) => setOpenModal(bool)}>\r\n                    <LogAtchivementFormInput submit={(v: any) => handleSubmit(\"add\", v)} importBtn={false}></LogAtchivementFormInput>\r\n                </ModalsHoc>\r\n            </div>\r\n\r\n            <div >\r\n                <ModalsHoc open={openDeleteConfirmation} title=\"Delete Student\" onShow={(bool: boolean) => setOpenDeleteConfirmation(bool)}>\r\n                    <DeleteModalContent\r\n                        number={1}\r\n                        singleDelete={true}\r\n                        onClose={() => setOpenDeleteConfirmation(false)}\r\n                        onClick={() => {\r\n                            deleteStudentLogApi(campaign, studentId).then((Res) => getProgress())\r\n                                .finally(() => setOpenDeleteConfirmation(false))\r\n\r\n                        }}></DeleteModalContent>\r\n                </ModalsHoc>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentProgress\r\n"],"sourceRoot":""}