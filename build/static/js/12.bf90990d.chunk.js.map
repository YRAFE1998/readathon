{"version":3,"sources":["components/Lables/pageTitle.ts","services/teacherDashboard.services.tsx","utils/calcPerecntage.ts","components/circle-dashboard/circle-dashboard-card.styles.ts","../../src/Path.tsx","../../src/CircularProgressbar.tsx","../../src/constants.ts","components/circle-dashboard/circle-dashboard-card.tsx","components/Lables/campaginDashboard.styles.ts","components/Lables/campaginDashboard.tsx","components/Lables/customsTopLabel.styles.ts","components/Lables/customsTopLabel.tsx","containers/CampiagnDashboard/campiagnDashboard.tsx"],"names":["PageTitle","styled","div","getTeacherDashboardApi","axiosInstance","get","getTeacherDashboardApiForSingleCampaign","id","getTeacherReport","getStudentReport","getSupporterReport","calcPercent","total","actual","CardStyles","Path","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","React.Component","getBackgroundPadding","this","props","background","backgroundPadding","getPathRadius","getPathRatio","value","minValue","maxValue","min","max","render","circleRatio","classes","styles","text","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","CircleDashboardCard","header","form","to","progress","round","width","height","stroke","strokeLinecap","transition","transformOrigin","transform","fill","fontSize","fontFamily","lineHeight","letterSpacing","textAlign","CampaginDashboardStyles","ThemeColor","red","grayColor","black","CampaginDashboard","startDate","endDate","CustomsTopLabelStyles","successColor","CustomsTopLabel","data","map","v","name","CampiagnDashboard","useState","teacherDashboard","setTeacherDashboard","topStudent","setTopStudent","topSupporter","setTopSupporter","useParams","useEffect","getDashboard","then","Res","arrayOfAchievementIds","total_achievement","student_id","arrayOfTotalDonationIds","total_donation","topStu","students","slice","filter","includes","Id","fname","numeral","ele","format","topSup","title","moment","actual_donation","targetDonation","actual_achievement","targetAchievement"],"mappings":"+JAEaA,E,MAAYC,EAAOC,IAAV,iP,iCCFtB,sLAEaC,EAAyB,WAClC,OAAOC,IAAcC,IAAd,uCAEEC,EAA0C,SAACC,GACpD,OAAOH,IAAcC,IAAd,+CAA0DE,KAGxDC,EAAmB,SAACD,GAC7B,OAAOH,IAAcC,IAAd,iDAA4DE,KAG1DE,EAAmB,SAACF,GAC7B,OAAOH,IAAcC,IAAd,iDAA4DE,KAI1DG,EAAqB,SAACH,GAC/B,OAAOH,IAAcC,IAAd,mDAA8DE,M,uDCnBzE,kCAAO,IAAMI,EAAc,SAACC,EAAeC,GACvC,OAAID,GAASC,EACQ,IAATA,EAAgBD,EAGjB,I,sDCHFE,E,MAAab,EAAOC,IAAV,q9B,oLCCvB,SAASa,EAAK,G,IACZC,EAAA,EAAAA,UACAC,EAAA,EAAAA,iBACAC,EAAA,EAAAA,UACAC,EAAA,EAAAA,WACAC,EAAA,EAAAA,YACAC,EAAA,EAAAA,MASA,OACEC,gCACEN,UAAWA,EACXK,MAAOE,OAAOC,OAAO,GAAIH,EAAOI,EAAa,CAAEN,WAAU,EAAED,UAAS,EAAED,iBAAgB,KACtFS,EAAGC,EAAmB,CACpBR,WAAU,EACVF,iBAAgB,IAElBG,YAAaA,EACbQ,YAAa,IAMnB,SAASD,EAAmB,G,IAC1BR,EAAA,EAAAA,WAOMU,EANN,EAAAZ,iBAMoC,EAAI,EAMxC,MAAO,+BAPQE,EASE,aATFA,EAUD,IAVCA,EAUS,IAAIU,EAAQ,UAAU,EAV/BV,EAUyC,aAVzCA,EAWD,IAXCA,EAWS,IAAIU,EAAQ,WAAW,EAXhCV,EAW0C,SAI3D,SAASM,EAAa,G,IACpBR,EAAA,EAAAA,iBACAC,EAAA,EAAAA,UACAC,EAAA,EAAAA,WAMMW,EAAqB,EAAVC,KAAKC,GAASb,EACzBc,GAAa,EAAIf,GAAaY,EAEpC,MAAO,CAELI,gBAAoBJ,EAAQ,MAAMA,EAAQ,KAE1CK,kBAAqBlB,GAAoBgB,EAAYA,GAAS,MC3DlE,+B,+CA8GA,O,2HA9GkCG,MA2BhC,YAAAC,qBAAA,WACE,OAAKC,KAAKC,MAAMC,WAITF,KAAKC,MAAME,kBAFT,GAKX,YAAAC,cAAA,WAGE,OChD+B,GDgDFJ,KAAKC,MAAMnB,YAAc,EAAIkB,KAAKD,wBAIjE,YAAAM,aAAA,WACQ,iBAAEC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,SAAUC,EAAA,EAAAA,SAEzB,OADqBf,KAAKgB,IAAIhB,KAAKiB,IAAIJ,EAAOC,GAAWC,GAClCD,IAAaC,EAAWD,IAGjD,YAAAI,OAAA,WACQ,iBACJC,EAAA,EAAAA,YACAlC,EAAA,EAAAA,UACAmC,EAAA,EAAAA,QACAlC,EAAA,EAAAA,iBACAmC,EAAA,EAAAA,OACAhC,EAAA,EAAAA,YACAiC,EAAA,EAAAA,KAGIlC,EAAamB,KAAKI,gBAClBY,EAAYhB,KAAKK,eAEvB,OACErB,+BACEN,UAAcmC,EAAQI,KAAI,IAAIvC,EAC9BK,MAAO+B,EAAOG,KACdC,QAAS,cAAwC,eACpC,uBAEZlB,KAAKC,MAAMC,WACVlB,kCACEN,UAAWmC,EAAQX,WACnBnB,MAAO+B,EAAOZ,WACdiB,GClFoB,GDmFpBC,GClFoB,GDmFpBC,ECrFuB,KDuFvB,KAEJrC,wBAACP,EAAI,CACHC,UAAWmC,EAAQS,MACnB3C,iBAAkBA,EAClBC,UAAWgC,EACX/B,WAAYA,EACZC,YAAaA,EACbC,MAAO+B,EAAOQ,QAGhBtC,wBAACP,EAAI,CACHC,UAAWmC,EAAQU,KACnB5C,iBAAkBA,EAClBC,UAAWoC,EAAYJ,EACvB/B,WAAYA,EACZC,YAAaA,EACbC,MAAO+B,EAAOS,OAGfR,EACC/B,gCACEN,UAAWmC,EAAQE,KACnBhC,MAAO+B,EAAOC,KACdS,EC9GoB,GD+GpBC,EC9GoB,IDgHnBV,GAED,OAzGH,EAAAW,aAAgD,CACrDxB,YAAY,EACZC,kBAAmB,EACnBS,YAAa,EACbC,QAAS,CACPI,KAAM,sBACNK,MAAO,4BACPC,KAAM,2BACNR,KAAM,2BACNb,WAAY,kCAEdvB,kBAAkB,EAClBD,UAAW,GACX8B,SAAU,IACVD,SAAU,EACVzB,YAAa,EACbgC,OAAQ,CACNG,KAAM,GACNK,MAAO,GACPC,KAAM,GACNR,KAAM,GACNb,WAAY,IAEda,KAAM,IAsFV,EA9GA,CAAkCjB,a,kBEgDnB6B,IAhDa,SAAC1B,GAEzB,OACI,8BACI,eAACzB,EAAD,WACI,mBAAGE,UAAU,SAAb,SAAuBuB,EAAM2B,SAC7B,oBAAGlD,UAAU,aAAb,UAA2BuB,EAAM4B,KAAjC,OAA2C5B,EAAM6B,MAEjD,sBAAKpD,UAAU,qBAAf,UACI,cAAC,EAAD,CAAqB4B,MAAOL,EAAM8B,SAAUhB,KAAI,UAAKtB,KAAKuC,MAAM/B,EAAM8B,UAAtB,KAC5CjB,OAAQ,CACJG,KAAM,CACFgB,MAAO,QACPC,OAAQ,SAEZX,KAAM,CACFY,OAAO,qBACPC,cAAe,QACfC,WAAY,iCACZC,gBAAiB,iBAErBhB,MAAO,CACHa,OAAQ,qBACRC,cAAe,OACfG,UAAW,mBACXD,gBAAiB,iBAErBvB,KAAM,CACFyB,KAAM,UACNC,SAAU,OACVC,WAAY,gBACZC,WAAY,OACZC,cAAc,UACdC,UAAW,UAGf3C,WAAY,CACRsC,KAAM,cAIlC,qBAAK9D,UAAU,YAAf,iC,mECnDSoE,EAA0BnF,IAAOC,IAAV,6kBAiBvBmF,IAAWC,IAkBXD,IAAWE,UAEPF,IAAWG,O,OCnBbC,IAbW,SAAClD,GACvB,OACI,8BACI,eAAC6C,EAAD,WACI,mBAAGpE,UAAU,SAAb,gBAAuBuB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAO2B,SAC9B,oBAAGlD,UAAU,OAAb,yBAAgC,sBAAMA,UAAU,aAAhB,SAA8BuB,EAAMmD,eACpE,oBAAG1E,UAAU,OAAb,uBAA8B,sBAAMA,UAAU,aAAhB,SAA8BuB,EAAMoD,oB,mECXrEC,EAAwB3F,IAAOC,IAAV,4vBAUrBmF,IAAWG,MAYXH,IAAWC,IAaXD,IAAWQ,c,OCbTC,IAlBS,SAACvD,GAAqC,IAAD,EACzD,OACI,eAACqD,EAAD,WACI,oBAAI5E,UAAU,SAAd,SAAwBuB,EAAM2B,SADlC,UAGQ3B,EAAMwD,YAHd,aAGQ,EAAYC,KAAI,SAACC,GACb,OAAO,sBAAKjF,UAAU,oDAAf,UACH,mBAAGA,UAAW,OAAd,SAAuBiF,EAAEC,OACzB,mBAAGlF,UAAW,QAAd,SAAwBiF,EAAErD,mB,kKCmFnCuD,UArFW,WAAO,IAAD,kBACoBC,mBAAc,IADlC,mBACrBC,EADqB,KACHC,EADG,OAEQF,mBAAS,IAFjB,mBAErBG,EAFqB,KAETC,EAFS,OAGYJ,mBAAS,IAHrB,mBAGrBK,EAHqB,KAGPC,EAHO,KAItBnG,EAAE,UAAGoG,qBAAH,aAAG,EAAkBpG,GAC7BqG,qBAAU,WACNC,MACD,IACH,IAAMA,EAAe,WACjBvG,YAAwCC,GAAIuG,MAAK,SAACC,GAC9CT,EAAoBS,EAAIhB,MACxB,IAAMiB,EAAwBD,EAAIhB,KAAKkB,kBAAkBjB,KAAI,SAACC,GAAD,OAAYA,EAAEiB,cACrEC,EAA0BJ,EAAIhB,KAAKqB,eAAepB,KAAI,SAACC,GAAD,OAAYA,EAAEiB,cAEpEG,EAASN,EAAIhB,KAAKA,KAAKuB,SAASC,QACjCC,QAAO,SAACvB,GAAD,OAAYe,EAAsBS,SAASxB,EAAEyB,OACpD1B,KAAI,SAACC,GAAD,eAAYA,EAAI,CACjBC,KAAMD,EAAE0B,MACR/E,MAAM,GAAD,OAAKgF,IAAO,UAACb,EAAIhB,KAAKkB,kBAAkBO,QAAO,SAACK,GAAD,OAAc5B,EAAEyB,IAAMG,EAAIX,qBAA7D,iBAAC,EAA0E,UAA3E,aAAC,EAA8ED,mBAAmBa,OAAO,OAArH,YAEPC,EAAShB,EAAIhB,KAAKA,KAAKuB,SAASC,QAAQC,QAAO,SAACvB,GAAD,OACjDkB,EAAwBM,SAASxB,EAAEyB,OAClC1B,KAAI,SAACC,GAAD,eAAYA,EAAI,CACjBC,KAAMD,EAAE0B,MACR/E,MAAM,GAAD,OAAKgF,IAAO,UAACb,EAAIhB,KAAKqB,eAAeI,QAAO,SAACK,GAAD,OAAc5B,EAAEyB,IAAMG,EAAIX,qBAA1D,iBAAC,EAAuE,UAAxE,aAAC,EAA2EE,gBAAgBU,OAAO,OAA/G,YAGbtB,EAAca,GACdX,EAAgBqB,OAMxB,OACI,gCACI,qBAAK/G,UAAU,iCAAf,SACI,8BACI,cAAC,IAAD,qCAKR,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CACKkD,OAAM,OAAEmC,QAAF,IAAEA,GAAF,UAAEA,EAAkBN,YAApB,aAAE,EAAwBiC,MAChCtC,UAAWuC,IAAM,OAAC5B,QAAD,IAACA,GAAD,UAACA,EAAkBN,YAAnB,aAAC,EAAwBL,WAAWoC,OAAO,cAC5DnC,QAASsC,IAAM,OAAC5B,QAAD,IAACA,GAAD,UAACA,EAAkBN,YAAnB,aAAC,EAAwBJ,SAASmC,OAAO,kBAGjE,sBAAK9G,UAAU,qBAAf,UAES,cAAC,IAAD,CACGkD,OAAQ,eACRC,KAAMyD,IAAO,OAACvB,QAAD,IAACA,OAAD,EAACA,EAAkB6B,iBAAiBJ,OAAO,OACxD1D,GAAIwD,IAAO,OAACvB,QAAD,IAACA,GAAD,UAACA,EAAkBN,YAAnB,aAAC,EAAwBoC,gBAAgBL,OAAO,OAC3DzD,SAAU1D,YAAW,OAAC0F,QAAD,IAACA,GAAD,UAACA,EAAkBN,YAAnB,aAAC,EAAwBoC,eAAzB,OAAyC9B,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAkB6B,mBAGxF,8BAAK,cAAC,IAAD,CAAiBhE,OAAQ,iBAAkB6B,KAAMU,SAK1D,sBAAKzF,UAAU,qBAAf,UACA,cAAC,IAAD,CACYkD,OAAQ,cACRC,KAAMyD,IAAO,OAACvB,QAAD,IAACA,OAAD,EAACA,EAAkB+B,oBAAoBN,OAAO,OAC3D1D,GAAIwD,IAAO,OAACvB,QAAD,IAACA,GAAD,UAACA,EAAkBN,YAAnB,aAAC,EAAwBsC,mBAAmBP,OAAO,OAC9DzD,SAAU1D,YAAW,OAAC0F,QAAD,IAACA,GAAD,UAACA,EAAkBN,YAAnB,aAAC,EAAwBsC,kBAAzB,OAA4ChC,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAkB+B,sBAG3F,8BAAK,cAAC,IAAD,CAAiBlE,OAAQ,eAAgB6B,KAAMQ","file":"static/js/12.bf90990d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PageTitle = styled.div`\r\nfont-family: SourceSansPro;\r\n\r\nfont-size: 40px;\r\n\r\nfont-weight: bold;\r\n\r\nfont-stretch: normal;\r\n\r\nfont-style: normal;\r\n\r\nline-height: 0.75;\r\n\r\nletter-spacing: normal;\r\n\r\ncolor: #000000;\r\nmargin-bottom: 17px;\r\n}\r\n`;","import { axiosInstance } from \"./axiosInstance\"\r\n\r\nexport const getTeacherDashboardApi = () => {\r\n    return axiosInstance.get(`/api/teacher/get/campaignDashboard`);\r\n}\r\nexport const getTeacherDashboardApiForSingleCampaign = (id: string) => {\r\n    return axiosInstance.get(`/api/teacher/get/mycampaignDashboard/${id}`);\r\n}\r\n\r\nexport const getTeacherReport = (id: string) => {\r\n    return axiosInstance.get(`/api/organization/getTeachers/campaign/${id}`)\r\n}\r\n\r\nexport const getStudentReport = (id: string) => {\r\n    return axiosInstance.get(`/api/organization/getStudents/campaign/${id}`)\r\n}\r\n\r\n\r\nexport const getSupporterReport = (id: string) => {\r\n    return axiosInstance.get(`/api/organization/get/campaignSupporters/${id}`)\r\n}","export const calcPercent = (total: number, actual: number) => {\r\n    if (total && actual) {\r\n        return (actual * 100) / total;\r\n\r\n    } else {\r\n        return 0;\r\n    }\r\n}","import styled from \"styled-components\";\r\nimport { ThemeColor } from \"../../utils/colors\";\r\nexport const CardStyles = styled.div`\r\nmin-height: 284px;\r\nmargin: 40px 0px;\r\npadding: 40px 20px;\r\nborder-radius: 6px;\r\nbox-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.09);\r\nbackground-color: #ffffff;\r\nwidth: 100%;\r\n\r\n.header{\r\n    font-family: SourceSansPro;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.42;\r\n    letter-spacing: -0.9px;\r\n    text-align: center;\r\n    color: #2b3037;\r\n}\r\n.sub-header{\r\n    opacity: 0.49;\r\n    font-family: SourceSansPro;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.56;\r\n    letter-spacing: -0.9px;\r\n    text-align: center;\r\n    color: #576169;\r\n}\r\n.complated{\r\n    margin-top: -50px;\r\n    font-family: SourceSansPro;\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.57;\r\n    letter-spacing: -0.5px;\r\n    text-align: center;\r\n    color: #7c868f;\r\n}\r\n`;","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { CardStyles } from './circle-dashboard-card.styles'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\ninterface CircleDashboardCardInterface {\r\n    header?: string;\r\n    form?: string;\r\n    to?: string;\r\n    children?: any;\r\n    progress?: any;\r\n\r\n}\r\nconst CircleDashboardCard = (props: CircleDashboardCardInterface) => {\r\n\r\n    return (\r\n        <div>\r\n            <CardStyles>\r\n                <p className=\"header\">{props.header}</p>\r\n                <p className=\"sub-header\">{props.form} of {props.to}</p>\r\n\r\n                <div className=\"text-center m-b-40\">\r\n                    <CircularProgressbar value={props.progress} text={`${Math.round(props.progress)}%`}\r\n                        styles={{\r\n                            root: {\r\n                                width: \"127px\",\r\n                                height: \"127px\",\r\n                            },\r\n                            path: {\r\n                                stroke: `rgba(241, 150, 58)`,\r\n                                strokeLinecap: 'round',\r\n                                transition: 'stroke-dashoffset 0.5s ease 0s',\r\n                                transformOrigin: 'center center',\r\n                            },\r\n                            trail: {\r\n                                stroke: 'rgb(225, 228, 232)',\r\n                                strokeLinecap: 'butt',\r\n                                transform: 'rotate(0.25turn)',\r\n                                transformOrigin: 'center center',\r\n                            },\r\n                            text: {\r\n                                fill: '#576169',\r\n                                fontSize: '26px',\r\n                                fontFamily: \"SourceSansPro\",\r\n                                lineHeight: \"1.33\",\r\n                                letterSpacing:\" -0.9px\",\r\n                                textAlign: \"center\",\r\n                              \r\n                            },\r\n                            background: {\r\n                                fill: '#3e98c7',\r\n                            },\r\n                        }}\r\n                    />\r\n    <div className=\"complated\">Complated</div>\r\n                </div>\r\n            </CardStyles>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CircleDashboardCard\r\n","import styled from \"styled-components\";\r\nimport { ThemeColor } from \"../../utils/colors\";\r\nexport const CampaginDashboardStyles = styled.div`\r\nmargin: 50px 0px;\r\n.header{\r\n    font-family: SourceSansPro;\r\n\r\n    font-size: 27px;\r\n  \r\n    font-weight: 600;\r\n  \r\n    font-stretch: normal;\r\n  \r\n    font-style: normal;\r\n  \r\n    line-height: 1;\r\n  \r\n    letter-spacing: normal;\r\n  \r\n    color: ${ThemeColor.red};\r\n    margin-bottom: 20px;\r\n}\r\n.date{\r\n    font-family: SourceSansPro;\r\n\r\n    font-size: 20px;\r\n  \r\n    font-weight: normal;\r\n  \r\n    font-stretch: normal;\r\n  \r\n    font-style: normal;\r\n  \r\n    line-height: normal;\r\n  \r\n    letter-spacing: normal;\r\n  \r\n    color: ${ThemeColor.grayColor};\r\n    span{\r\n        color: ${ThemeColor.black};\r\n    }\r\n}\r\n`;","import React from 'react'\r\nimport { CampaginDashboardStyles } from './campaginDashboard.styles'\r\ninterface CampaginDashboardInterface {\r\n    header?: string;\r\n    startDate?: string;\r\n    endDate?: string;\r\n}\r\nconst CampaginDashboard = (props: CampaginDashboardInterface) => {\r\n    return (\r\n        <div>\r\n            <CampaginDashboardStyles>\r\n                <p className=\"header\">{props?.header}</p>\r\n                <p className=\"date\">Start Date: <span className=\"date-value\">{props.startDate}</span></p>\r\n                <p className=\"date\">End Date: <span className=\"date-value\">{props.endDate}</span></p>\r\n\r\n            </CampaginDashboardStyles>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CampaginDashboard\r\n","import styled from \"styled-components\";\r\nimport { ThemeColor } from \"../../utils/colors\";\r\nexport const CustomsTopLabelStyles = styled.div`\r\nmargin-top: 20px;\r\n.header{\r\n    font-family: SourceSansPro;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 0.91;\r\n    letter-spacing: normal;\r\n    color: ${ThemeColor.black};\r\n    margin-bottom: 15px;\r\n\r\n}\r\n.name{\r\n    font-family: SourceSansPro;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    color: ${ThemeColor.red};\r\n    margin-bottom: 10px;\r\n\r\n}\r\n.value{\r\n    font-family: SourceSansPro;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    text-align: end;\r\n    color: ${ThemeColor.successColor}\r\n}\r\n`;","import React from 'react'\r\nimport { CustomsTopLabelStyles } from './customsTopLabel.styles'\r\ninterface CustomsTopLabelInterface {\r\n    header?: string;\r\n    data?: any[]\r\n}\r\nconst CustomsTopLabel = (props: CustomsTopLabelInterface) => {\r\n    return (\r\n        <CustomsTopLabelStyles>\r\n            <h4 className=\"header\">{props.header}</h4>\r\n            {\r\n                props.data?.map((v) => {\r\n                    return <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <p className={\"name\"}>{v.name}</p>\r\n                        <p className={\"value\"}>{v.value}</p>\r\n\r\n\r\n                    </div>\r\n                })\r\n            }\r\n        </CustomsTopLabelStyles>\r\n    )\r\n}\r\n\r\nexport default CustomsTopLabel\r\n","import moment from 'moment'\r\nimport numeral from 'numeral'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport CircleDashboardCard from '../../components/circle-dashboard/circle-dashboard-card'\r\nimport CampaginDashboard from '../../components/Lables/campaginDashboard'\r\nimport CustomsTopLabel from '../../components/Lables/customsTopLabel'\r\nimport { PageTitle } from '../../components/Lables/pageTitle'\r\nimport {  getTeacherDashboardApiForSingleCampaign } from '../../services/teacherDashboard.services'\r\nimport { calcPercent } from '../../utils/calcPerecntage'\r\n\r\n\r\nconst CampiagnDashboard = () => {\r\n    const [teacherDashboard, setTeacherDashboard] = useState<any>({});\r\n    const [topStudent, setTopStudent] = useState([]);\r\n    const [topSupporter, setTopSupporter] = useState([]);\r\n    const id = useParams<any>()?.id;\r\n    useEffect(() => {\r\n        getDashboard();\r\n    }, []);\r\n    const getDashboard = () => {\r\n        getTeacherDashboardApiForSingleCampaign(id).then((Res) => {\r\n            setTeacherDashboard(Res.data);\r\n            const arrayOfAchievementIds = Res.data.total_achievement.map((v: any) => v.student_id);\r\n            const arrayOfTotalDonationIds = Res.data.total_donation.map((v: any) => v.student_id);\r\n\r\n            const topStu = Res.data.data.students.slice()\r\n                .filter((v: any) => arrayOfAchievementIds.includes(v.Id))\r\n                .map((v: any) => v = {\r\n                    name: v.fname,\r\n                    value: `${numeral(Res.data.total_achievement.filter((ele: any) => v.Id == ele.student_id)?.[0]?.total_achievement).format(\"0,0\")} Min`\r\n                });\r\n            const topSup = Res.data.data.students.slice().filter((v: any) =>\r\n                arrayOfTotalDonationIds.includes(v.Id))\r\n                .map((v: any) => v = {\r\n                    name: v.fname,\r\n                    value: `${numeral(Res.data.total_donation.filter((ele: any) => v.Id == ele.student_id)?.[0]?.total_donation).format(\"0,0\")} USD`\r\n                });\r\n\r\n            setTopStudent(topStu)\r\n            setTopSupporter(topSup)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <PageTitle>Campaign Dashboard</PageTitle>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-md-12\">\r\n                    <CampaginDashboard\r\n                         header={teacherDashboard?.data?.title}\r\n                         startDate={moment(teacherDashboard?.data?.startDate).format(\"DD/MM/YYYY\")}\r\n                         endDate={moment(teacherDashboard?.data?.endDate).format(\"DD/MM/YYYY\")} />\r\n                </div>\r\n\r\n                <div className=\"col-lg-4 col-md-12\">\r\n                 \r\n                         <CircleDashboardCard\r\n                            header={\"Money Raised\"}\r\n                            form={numeral(teacherDashboard?.actual_donation).format(\"0,0\")}\r\n                            to={numeral(teacherDashboard?.data?.targetDonation).format(\"0,0\")}\r\n                            progress={calcPercent(teacherDashboard?.data?.targetDonation, teacherDashboard?.actual_donation)} />\r\n\r\n\r\n                    <div><CustomsTopLabel header={\"Top Supporters\"} data={topSupporter} /></div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"col-lg-4 col-md-12\">\r\n                <CircleDashboardCard\r\n                            header={\"Achievement\"}\r\n                            form={numeral(teacherDashboard?.actual_achievement).format(\"0,0\")}\r\n                            to={numeral(teacherDashboard?.data?.targetAchievement).format(\"0,0\")}\r\n                            progress={calcPercent(teacherDashboard?.data?.targetAchievement, teacherDashboard?.actual_achievement)}\r\n                        />\r\n\r\n                    <div><CustomsTopLabel header={\"Top Students\"} data={topStudent} /></div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CampiagnDashboard\r\n"],"sourceRoot":""}